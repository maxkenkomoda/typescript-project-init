{
  "compilerOptions": {
    /* Basic Options */
    "target": "es6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */,
    "module": "es6" /* Specify module code generation: 'commonjs', 'amd', 'system', 'umd' or 'es2015'. */,
    "allowJs": false /* Allow JavaScript files to be compiled. */,
    "checkJs": false /* Report errors in .js files. */,
    "declaration": false /* Generates corresponding '.d.ts' file. */,
    "sourceMap": false /* Generates corresponding '.map' file. */,
    "outDir": "dist" /* Redirect output structure to the directory. */,
    // "rootDir": "." /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "removeComments": true /* Do not emit comments to output. */,
    "importHelpers": false /* Import emit helpers from 'tslib'. */,
    "lib": ["ES2015", "es2017", "DOM"],
    "downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
    "isolatedModules": false /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
    /* Strict Type-Checking Options */
    "strictNullChecks": true /* Enable strict null checks. */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,

    /* Additional Checks */
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "baseUrl": "." /* Base directory to resolve non-absolute module names. */,
    "paths": {} /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
    "rootDirs": [] /* List of root folders whose combined content represents the structure of the project at runtime. */,
    "typeRoots": [] /* List of folders to include type definitions from. */,
    "types": ["node"] /* Type declaration files to be included in compilation. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,

    /* Experimental Options */
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
    "resolveJsonModule": true
  },
  "include": ["src", "tests/index.test.ts"],
  "exclude": ["node_modules", "dist"]
}
